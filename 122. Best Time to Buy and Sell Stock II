class Solution1 {
public:
    int maxProfit(vector<int>& prices) {
        return f1(0 , prices);
    }
private:
    int f1(int i , const vector<int>& prices) {
        if(i == prices.size() - 1) return 0;
        else return max(f1(i+1 , prices) , f2(i+1 , prices) - prices[i]);
    }
    
    int f2(int i , const vector<int>& prices) {
        if(i == prices.size() - 1) return prices.back();
        else return max(prices[i]+f1(i+1,prices) , f2(i+1 , prices));
    }
};

// f1 -> buy f2 ->sell
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        vector<int> f1tbl(prices.size(), INT_MIN);
        vector<int> f2tbl(prices.size(), INT_MIN);
        return f1(0, prices, f1tbl ,f2tbl);
    }
private:
    int f1(int i, const vector<int>& prices, vector<int> &f1tbl,vector<int> &f2tbl) {
        if(f1tbl[i] == INT_MIN) {
        if(i == prices.size() - 1) f1tbl[i] =  0;
        else f1tbl[i] = max(f1(i+1, prices, f1tbl ,f2tbl), f2(i+1, prices,f1tbl , f2tbl) - prices[i]);
        }
        return f1tbl[i];
    }
    int f2(int i, const vector<int>& prices, vector<int> &f1tbl , vector<int> &f2tbl) {
        if(f2tbl[i] == INT_MIN) {
            if(i == prices.size() - 1) f2tbl[i] = prices.back();
            else f2tbl[i] = max(prices[i]+f1(i+1,prices,f1tbl ,f2tbl), f2(i+1, prices,f1tbl , f2tbl));
        }
        return f2tbl[i];
    }
};
